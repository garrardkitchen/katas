<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.net core on Katas</title>
    <link>https://katas.garrardkitchen.com/tags/.net-core/</link>
    <description>Recent content in .net core on Katas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Apr 2020 16:30:23 +0100</lastBuildDate>
    
	<atom:link href="https://katas.garrardkitchen.com/tags/.net-core/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>.NET Core Web App</title>
      <link>https://katas.garrardkitchen.com/posts/net-core-web-app/</link>
      <pubDate>Mon, 27 Apr 2020 16:30:23 +0100</pubDate>
      
      <guid>https://katas.garrardkitchen.com/posts/net-core-web-app/</guid>
      <description>Create a .NET Core C# web application that renders a list of random names api. Load Names from an API, where the URI for API is set in an appSettings file. Use the Configuration IOptions pattern and the HttpClientFactory factory class. Create a test using Moq and xUnit, and return Stub from HttpMessageHandler. Use a different API URI per environment.
Requirements:
  Create an .NET Core web app using the dotnet CLI and add to a src folder</description>
    </item>
    
    <item>
      <title>.NET Core and Kubernetes</title>
      <link>https://katas.garrardkitchen.com/posts/net-core-web-app-docker/</link>
      <pubDate>Mon, 27 Apr 2020 16:30:11 +0100</pubDate>
      
      <guid>https://katas.garrardkitchen.com/posts/net-core-web-app-docker/</guid>
      <description>Create a Redis Caching layer for above net-core-web-app.NET Core random name web application. Have a TTL of 10 seconds. Host in Docker container. Create an Kubernetes deployment manifest. Refs: deployment example
Requirements:
  Complete net-core-web-app
  Install Kubectl
  Install Minikube to work with hyper-v driver
  Set the docker environment to point the MiniKube local Kubernetes cluster
  TBC
  Tech:
 .NET Core 3.</description>
    </item>
    
  </channel>
</rss>