<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Katas</title>
    <link>https://katas.garrardkitchen.com/tags/docker/</link>
    <description>Recent content in docker on Katas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 May 2020 14:33:12 +0100</lastBuildDate>
    
	<atom:link href="https://katas.garrardkitchen.com/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lerna</title>
      <link>https://katas.garrardkitchen.com/posts/lerna/</link>
      <pubDate>Mon, 04 May 2020 14:33:12 +0100</pubDate>
      
      <guid>https://katas.garrardkitchen.com/posts/lerna/</guid>
      <description>Monorepo (all projects are stored in a single repository) is a relatively new concept (to me) and so I&amp;rsquo;ve provided more than usual hits/sample code in the kata. This is primarily to help me cement the core commands.
The BACKGROUND to why I&amp;rsquo;ve created this is kata is this. I&amp;rsquo;ve recently needed to create several RabbitMQ consumers through a devised pattern, including additional common functionality. As there is common code, I did not want to violate the DRY principle so set about researching a way to do this, easily, with a nodejs repo.</description>
    </item>
    
    <item>
      <title>.NET Core and Kubernetes</title>
      <link>https://katas.garrardkitchen.com/posts/net-core-web-app-docker/</link>
      <pubDate>Mon, 27 Apr 2020 16:30:11 +0100</pubDate>
      
      <guid>https://katas.garrardkitchen.com/posts/net-core-web-app-docker/</guid>
      <description>Create a Redis Caching layer for above net-core-web-app.NET Core random name web application. Have a TTL of 10 seconds. Host in Docker container. Create an Kubernetes deployment manifest. Refs: deployment example
Requirements:
  Complete net-core-web-app
  Install Kubectl
  Install Minikube to work with hyper-v driver
  Set the docker environment to point the MiniKube local Kubernetes cluster
  TBC
  Tech:
 .NET Core 3.</description>
    </item>
    
  </channel>
</rss>